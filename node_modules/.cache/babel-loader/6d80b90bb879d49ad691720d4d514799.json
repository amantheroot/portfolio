{"ast":null,"code":"import _toConsumableArray from \"/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport InitialState from \"../initialState\";\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _objectSpread({}, InitialState.form);\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"toggleGamePlay\":\n      return _objectSpread({}, state, {\n        game: !state.game\n      });\n\n    case \"toggleBarReady\":\n      return _objectSpread({}, state, {\n        barReady: !state.barReady\n      });\n\n    case \"ChangeVel\":\n      return _objectSpread({}, state, {\n        ballvel: action.payload\n      });\n\n    case \"ChangeYVel\":\n      return _objectSpread({}, state, {\n        ballyvel: action.payload\n      });\n\n    case \"ChangeXVel\":\n      return _objectSpread({}, state, {\n        ballxvel: action.payload\n      });\n\n    case \"ChangeLife\":\n      return _objectSpread({}, state, {\n        lives: action.payload\n      });\n\n    case \"ChangeScore\":\n      return _objectSpread({}, state, {\n        score: action.payload\n      });\n\n    case \"BrickHit\":\n      var bricks = _toConsumableArray(state.bricks);\n\n      bricks[action.payload].alive = false;\n      return _objectSpread({}, state, {\n        bricks: bricks\n      });\n\n    case \"ResetBricks\":\n      var Bricks = Array.apply(null, Array(14 * 6)).map(function (v, id) {\n        return {\n          id: id,\n          alive: true\n        };\n      });\n      return _objectSpread({}, state, {\n        bricks: Bricks\n      });\n\n    case \"SetMessage\":\n      return _objectSpread({}, state, {\n        msg: action.payload\n      });\n\n    case \"ToggleInfoProvided\":\n      return _objectSpread({}, state, {\n        infoprovided: action.payload\n      });\n\n    case \"ResetStore\":\n      return InitialState.form;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/src/store/reducers/formReducer.js"],"names":["InitialState","reducer","state","form","action","type","game","barReady","ballvel","payload","ballyvel","ballxvel","lives","score","bricks","alive","Bricks","Array","apply","map","v","id","msg","infoprovided"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,iBAAzB;AAEA,eAAe,SAASC,OAAT,GAA2D;AAAA,MAA1CC,KAA0C,yFAA7BF,YAAY,CAACG,IAAgB;AAAA,MAARC,MAAQ;;AACxE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,+BAAYH,KAAZ;AAAmBI,QAAAA,IAAI,EAAE,CAACJ,KAAK,CAACI;AAAhC;;AACF,SAAK,gBAAL;AACE,+BAAYJ,KAAZ;AAAmBK,QAAAA,QAAQ,EAAE,CAACL,KAAK,CAACK;AAApC;;AACF,SAAK,WAAL;AACE,+BAAYL,KAAZ;AAAmBM,QAAAA,OAAO,EAAEJ,MAAM,CAACK;AAAnC;;AACF,SAAK,YAAL;AACE,+BAAYP,KAAZ;AAAmBQ,QAAAA,QAAQ,EAAEN,MAAM,CAACK;AAApC;;AACF,SAAK,YAAL;AACE,+BAAYP,KAAZ;AAAmBS,QAAAA,QAAQ,EAAEP,MAAM,CAACK;AAApC;;AACF,SAAK,YAAL;AACE,+BAAYP,KAAZ;AAAmBU,QAAAA,KAAK,EAAER,MAAM,CAACK;AAAjC;;AACF,SAAK,aAAL;AACE,+BAAYP,KAAZ;AAAmBW,QAAAA,KAAK,EAAET,MAAM,CAACK;AAAjC;;AACF,SAAK,UAAL;AACE,UAAIK,MAAM,sBAAOZ,KAAK,CAACY,MAAb,CAAV;;AACAA,MAAAA,MAAM,CAACV,MAAM,CAACK,OAAR,CAAN,CAAuBM,KAAvB,GAA+B,KAA/B;AACA,+BAAYb,KAAZ;AAAmBY,QAAAA,MAAM,EAANA;AAAnB;;AACF,SAAK,aAAL;AACE,UAAIE,MAAM,GAAGC,KAAK,CAACC,KAAN,CAAY,IAAZ,EAAkBD,KAAK,CAAC,KAAK,CAAN,CAAvB,EAAiCE,GAAjC,CAAqC,UAACC,CAAD,EAAIC,EAAJ,EAAW;AAC3D,eAAO;AAAEA,UAAAA,EAAE,EAAFA,EAAF;AAAMN,UAAAA,KAAK,EAAE;AAAb,SAAP;AACD,OAFY,CAAb;AAGA,+BAAYb,KAAZ;AAAmBY,QAAAA,MAAM,EAAEE;AAA3B;;AACF,SAAK,YAAL;AACE,+BAAYd,KAAZ;AAAmBoB,QAAAA,GAAG,EAAElB,MAAM,CAACK;AAA/B;;AACF,SAAK,oBAAL;AACE,+BAAYP,KAAZ;AAAmBqB,QAAAA,YAAY,EAAEnB,MAAM,CAACK;AAAxC;;AACF,SAAK,YAAL;AACE,aAAOT,YAAY,CAACG,IAApB;;AACF;AACE,aAAOD,KAAP;AA/BJ;AAiCD","sourcesContent":["import InitialState from \"../initialState\";\n\nexport default function reducer(state = { ...InitialState.form }, action) {\n  switch (action.type) {\n    case \"toggleGamePlay\":\n      return { ...state, game: !state.game };\n    case \"toggleBarReady\":\n      return { ...state, barReady: !state.barReady };\n    case \"ChangeVel\":\n      return { ...state, ballvel: action.payload };\n    case \"ChangeYVel\":\n      return { ...state, ballyvel: action.payload };\n    case \"ChangeXVel\":\n      return { ...state, ballxvel: action.payload };\n    case \"ChangeLife\":\n      return { ...state, lives: action.payload };\n    case \"ChangeScore\":\n      return { ...state, score: action.payload };\n    case \"BrickHit\":\n      let bricks = [...state.bricks];\n      bricks[action.payload].alive = false;\n      return { ...state, bricks };\n    case \"ResetBricks\":\n      let Bricks = Array.apply(null, Array(14 * 6)).map((v, id) => {\n        return { id, alive: true };\n      });\n      return { ...state, bricks: Bricks };\n    case \"SetMessage\":\n      return { ...state, msg: action.payload };\n    case \"ToggleInfoProvided\":\n      return { ...state, infoprovided: action.payload };\n    case \"ResetStore\":\n      return InitialState.form;\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
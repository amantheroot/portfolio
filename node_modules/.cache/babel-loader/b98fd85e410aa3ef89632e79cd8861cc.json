{"ast":null,"code":"import _toConsumableArray from \"/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// import { combineReducers } from \"redux\";\n// export default combineReducers({});\nimport InitialState from \"../initialState\";\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"toggleGamePlay\":\n      return _objectSpread({}, state, {\n        game: !state.game\n      });\n\n    case \"toggleBarReady\":\n      return _objectSpread({}, state, {\n        barReady: !state.barReady\n      });\n\n    case \"ChangeYVel\":\n      return _objectSpread({}, state, {\n        ballyv: state.ballyv * action.payload\n      });\n\n    case \"ChangeXVel\":\n      return _objectSpread({}, state, {\n        ballxv: state.ballxv * action.payload\n      });\n\n    case \"ChangeCoords\":\n      return _objectSpread({}, state, {\n        ballx: action.payload.x,\n        bally: action.payload.y\n      });\n\n    case \"BrickHit\":\n      var bricks = _toConsumableArray(state.bricks);\n\n      bricks[action.payload].alive = false;\n      return _objectSpread({}, state, {\n        bricks: bricks\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/src/store/reducers/index.js"],"names":["InitialState","reducer","state","action","type","game","barReady","ballyv","payload","ballxv","ballx","x","bally","y","bricks","alive"],"mappings":";;AAAA;AAEA;AAEA,OAAOA,YAAP,MAAyB,iBAAzB;AAEA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,+BAAYF,KAAZ;AAAmBG,QAAAA,IAAI,EAAE,CAACH,KAAK,CAACG;AAAhC;;AACF,SAAK,gBAAL;AACE,+BAAYH,KAAZ;AAAmBI,QAAAA,QAAQ,EAAE,CAACJ,KAAK,CAACI;AAApC;;AACF,SAAK,YAAL;AACE,+BAAYJ,KAAZ;AAAmBK,QAAAA,MAAM,EAAEL,KAAK,CAACK,MAAN,GAAeJ,MAAM,CAACK;AAAjD;;AACF,SAAK,YAAL;AACE,+BAAYN,KAAZ;AAAmBO,QAAAA,MAAM,EAAEP,KAAK,CAACO,MAAN,GAAeN,MAAM,CAACK;AAAjD;;AACF,SAAK,cAAL;AACE,+BAAYN,KAAZ;AAAmBQ,QAAAA,KAAK,EAAEP,MAAM,CAACK,OAAP,CAAeG,CAAzC;AAA4CC,QAAAA,KAAK,EAAET,MAAM,CAACK,OAAP,CAAeK;AAAlE;;AACF,SAAK,UAAL;AACE,UAAIC,MAAM,sBAAOZ,KAAK,CAACY,MAAb,CAAV;;AACAA,MAAAA,MAAM,CAACX,MAAM,CAACK,OAAR,CAAN,CAAuBO,KAAvB,GAA+B,KAA/B;AACA,+BAAYb,KAAZ;AAAmBY,QAAAA,MAAM,EAANA;AAAnB;;AACF;AACE,aAAOZ,KAAP;AAhBJ;AAkBD","sourcesContent":["// import { combineReducers } from \"redux\";\n\n// export default combineReducers({});\n\nimport InitialState from \"../initialState\";\n\nexport default function reducer(state = InitialState, action) {\n  switch (action.type) {\n    case \"toggleGamePlay\":\n      return { ...state, game: !state.game };\n    case \"toggleBarReady\":\n      return { ...state, barReady: !state.barReady };\n    case \"ChangeYVel\":\n      return { ...state, ballyv: state.ballyv * action.payload };\n    case \"ChangeXVel\":\n      return { ...state, ballxv: state.ballxv * action.payload };\n    case \"ChangeCoords\":\n      return { ...state, ballx: action.payload.x, bally: action.payload.y };\n    case \"BrickHit\":\n      let bricks = [...state.bricks];\n      bricks[action.payload].alive = false;\n      return { ...state, bricks };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
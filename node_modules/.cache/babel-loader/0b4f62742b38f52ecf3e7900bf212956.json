{"ast":null,"code":"export default function () {\n  function validEmail(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n  }\n\n  function validateHuman(honeypot) {\n    if (honeypot !== \"\") {\n      //if hidden form filled up\n      console.log(\"Robot Detected!\");\n      return true;\n    } else {\n      console.log(\"Welcome Human!\");\n    }\n  } // get all data in form and return object\n\n\n  function getFormData(form) {\n    var elements = form.elements;\n    var fields = Object.keys(elements) // .filter(function(k) {\n    //   return elements[k].name !== \"honeypot\";\n    // })\n    .map(function (k) {\n      if (elements[k].name !== undefined) {\n        return elements[k].name; // special case for Edge's html collection\n      } else if (elements[k].length > 0) {\n        return elements[k].item(0).name;\n      } else {\n        return elements[k].name;\n      }\n    }).filter(function (item, pos, self) {\n      return self.indexOf(item) === pos && item;\n    });\n    var formData = {};\n    fields.forEach(function (name) {\n      var element = elements[name]; // singular form elements just have one value\n\n      formData[name] = element.value; // when our element has multiple items, get their values\n\n      if (element.length) {\n        var data = [];\n\n        for (var i = 0; i < element.length; i++) {\n          var item = element.item(i);\n\n          if (item.checked || item.selected) {\n            data.push(item.value);\n          }\n        }\n\n        formData[name] = data.join(\", \");\n      }\n    }); // add form-specific values into the data\n\n    formData.formDataNameOrder = JSON.stringify(fields);\n    formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n\n    formData.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n    console.log(formData);\n    return formData;\n  }\n\n  function handleFormSubmit(event) {\n    // handles form submit without any jquery\n    event.preventDefault(); // we are submitting via xhr below\n\n    var form = event.target;\n    var data = getFormData(form); // get the values submitted in the form\n\n    /* OPTION: Remove this comment to enable SPAM prevention, see README.md*/\n\n    if (validateHuman(data.honeypot)) {\n      //if form is filled, form will not be submitted\n      return false;\n    }\n\n    if (data.email && !validEmail(data.email)) {\n      // if email is not valid show error\n      var invalidEmail = form.querySelector(\".email-invalid\");\n\n      if (invalidEmail) {\n        invalidEmail.style.display = \"block\";\n        return false;\n      }\n    } else {\n      disableAllButtons(form);\n      var url = form.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", url); // xhr.withCredentials = true;\n\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n      xhr.onreadystatechange = function () {\n        console.log(xhr.status, xhr.statusText);\n        console.log(xhr.responseText);\n\n        if (xhr.responseText) {\n          var responseText = JSON.parse(xhr.responseText);\n          var result = responseText.result;\n\n          if (result === \"success\") {\n            console.log(\"YAYYYYYYY!!!\");\n            window.location = \"thankyou\";\n          }\n        } // var formElements = form.querySelector(\".form-elements\");\n        // if (formElements) {\n        //   formElements.style.display = \"none\"; // hide form\n        // }\n        // var thankYouMessage = document.querySelector(\".thankyou_message\");\n        // if (thankYouMessage) {\n        //   thankYouMessage.style.display = \"block\";\n        // }\n\n\n        return;\n      }; // url encode form data for sending as post data\n\n\n      var encoded = Object.keys(data).map(function (k) {\n        return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n      }).join(\"&\");\n      xhr.send(encoded);\n    }\n  }\n\n  function loaded() {\n    console.log(\"Contact form submission handler loaded successfully.\"); // bind to the submit event of our form\n\n    var forms = document.querySelectorAll(\"form#gform\");\n\n    for (var i = 0; i < forms.length; i++) {\n      forms[i].addEventListener(\"submit\", handleFormSubmit, false);\n    }\n  } // document.addEventListener(\"DOMContentLoaded\", loaded, false);\n\n\n  loaded();\n\n  function disableAllButtons(form) {\n    var buttons = form.querySelectorAll(\"button\");\n\n    for (var i = 0; i < buttons.length; i++) {\n      buttons[i].disabled = true;\n    }\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/WebDev/Dirty Hands/Portfolio/portfolio_website/src/assets/formhandler.js"],"names":["validEmail","email","re","test","validateHuman","honeypot","console","log","getFormData","form","elements","fields","Object","keys","map","k","name","undefined","length","item","filter","pos","self","indexOf","formData","forEach","element","value","data","i","checked","selected","push","join","formDataNameOrder","JSON","stringify","formGoogleSheetName","dataset","sheet","formGoogleSendEmail","handleFormSubmit","event","preventDefault","target","invalidEmail","querySelector","style","display","disableAllButtons","url","action","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","status","statusText","responseText","parse","result","window","location","encoded","encodeURIComponent","send","loaded","forms","document","querySelectorAll","addEventListener","buttons","disabled"],"mappings":"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","sourcesContent":["export default function() {\n  function validEmail(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n  }\n\n  function validateHuman(honeypot) {\n    if (honeypot !== \"\") {\n      //if hidden form filled up\n      console.log(\"Robot Detected!\");\n      return true;\n    } else {\n      console.log(\"Welcome Human!\");\n    }\n  }\n\n  // get all data in form and return object\n  function getFormData(form) {\n    var elements = form.elements;\n\n    var fields = Object.keys(elements)\n      // .filter(function(k) {\n      //   return elements[k].name !== \"honeypot\";\n      // })\n      .map(function(k) {\n        if (elements[k].name !== undefined) {\n          return elements[k].name;\n          // special case for Edge's html collection\n        } else if (elements[k].length > 0) {\n          return elements[k].item(0).name;\n        } else {\n          return elements[k].name;\n        }\n      })\n      .filter(function(item, pos, self) {\n        return self.indexOf(item) === pos && item;\n      });\n\n    var formData = {};\n    fields.forEach(function(name) {\n      var element = elements[name];\n\n      // singular form elements just have one value\n      formData[name] = element.value;\n\n      // when our element has multiple items, get their values\n      if (element.length) {\n        var data = [];\n        for (var i = 0; i < element.length; i++) {\n          var item = element.item(i);\n          if (item.checked || item.selected) {\n            data.push(item.value);\n          }\n        }\n        formData[name] = data.join(\", \");\n      }\n    });\n\n    // add form-specific values into the data\n    formData.formDataNameOrder = JSON.stringify(fields);\n    formData.formGoogleSheetName = form.dataset.sheet || \"responses\"; // default sheet name\n    formData.formGoogleSendEmail = form.dataset.email || \"\"; // no email by default\n\n    console.log(formData);\n    return formData;\n  }\n\n  function handleFormSubmit(event) {\n    // handles form submit without any jquery\n    event.preventDefault(); // we are submitting via xhr below\n    var form = event.target;\n    var data = getFormData(form); // get the values submitted in the form\n\n    /* OPTION: Remove this comment to enable SPAM prevention, see README.md*/\n    if (validateHuman(data.honeypot)) {\n      //if form is filled, form will not be submitted\n      return false;\n    }\n\n    if (data.email && !validEmail(data.email)) {\n      // if email is not valid show error\n      var invalidEmail = form.querySelector(\".email-invalid\");\n      if (invalidEmail) {\n        invalidEmail.style.display = \"block\";\n        return false;\n      }\n    } else {\n      disableAllButtons(form);\n      var url = form.action;\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"POST\", url);\n      // xhr.withCredentials = true;\n      xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xhr.onreadystatechange = function() {\n        console.log(xhr.status, xhr.statusText);\n        console.log(xhr.responseText);\n\n        if (xhr.responseText) {\n          let responseText = JSON.parse(xhr.responseText);\n          let result = responseText.result;\n\n          if (result === \"success\") {\n            console.log(\"YAYYYYYYY!!!\");\n            window.location = \"thankyou\";\n          }\n        }\n\n        // var formElements = form.querySelector(\".form-elements\");\n        // if (formElements) {\n        //   formElements.style.display = \"none\"; // hide form\n        // }\n        // var thankYouMessage = document.querySelector(\".thankyou_message\");\n        // if (thankYouMessage) {\n        //   thankYouMessage.style.display = \"block\";\n        // }\n        return;\n      };\n      // url encode form data for sending as post data\n      var encoded = Object.keys(data)\n        .map(function(k) {\n          return encodeURIComponent(k) + \"=\" + encodeURIComponent(data[k]);\n        })\n        .join(\"&\");\n      xhr.send(encoded);\n    }\n  }\n\n  function loaded() {\n    console.log(\"Contact form submission handler loaded successfully.\");\n    // bind to the submit event of our form\n    var forms = document.querySelectorAll(\"form#gform\");\n    for (var i = 0; i < forms.length; i++) {\n      forms[i].addEventListener(\"submit\", handleFormSubmit, false);\n    }\n  }\n  // document.addEventListener(\"DOMContentLoaded\", loaded, false);\n  loaded();\n\n  function disableAllButtons(form) {\n    var buttons = form.querySelectorAll(\"button\");\n    for (var i = 0; i < buttons.length; i++) {\n      buttons[i].disabled = true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}